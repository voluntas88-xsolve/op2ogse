-- -*- mode: lua; coding: windows-1251-dos -*-

function attach( sm )
  sm:subscribe({ signal = "on_before_first_update", fun = this.on_first_update })
  sm:subscribe({ signal = "on_before_spawn", fun = this.on_spawn })
end


local processed_info = {}
local vname          = "dsh_fixes.version"

function on_first_update()
  local fixes = {
    all_spawn_fix.respawn_allspawn,
    this.kill_journalist_npc,
    this.free_bar_visitors,
    this.free_bar_visitors_fix2,
    this.free_bar_ohotnik,
    this.free_kalmyak_marsh,
    this.free_marsh_exit_nebo,
    this.free_marsh_hunters,
    this.remove_ogse_relation_reverse_table,
    this.fix_zone_ameba,
    this.fix_prizrak_wpn,
    this.fix_val_rob_buying,
    this.fix_val_rob_buying,
    this.start_dsh_walking_job,
    this.fix_prizrak_gauss,
    this.fix_gener_spawn_tvari,
    this.fix_rx_wmgr_boxes,
    this.fix_nevid_monolit,
    this.free_aver_otshelnik,
    this.free_aver_hunter,
    this.fix_red_psy_dog_phantom,
    this.free_green_forest,
    this.free_stalker_forest_bashya,
    this.remove_marsh_ameba1,
    this.fix_crow_respawns,
    this.fix_taynik_alexandrych,
    this.fix_military_fotomuzhik,
    this.free_generators_orly,
    this.fix_af_pero,
    this.respawn_gavr_and_co, -- 29
    this.remove_padar_spawn_zombi_kukla_restrictor,
    this.fix_bandit_goodwill,
    this.fix_aes_battle_sounds,
    this.fix_pri_battle_sounds,
    this.fix_ogse_actor_conditions_mgr_cam_inert,
    this.fix_esc_bridge_pass_fire,
    this.respawn_gavr_and_co_2,
    this.fix_detector_suit,
    this.fix_mil_tush1,
    this.fix_grib_respawn,
    this.fix_horrortime_begin,
    this.fix_af_transform_cnt,
    this.fix_trade_dialog_timers,
    this.fix_trade_dialog_timers2,
    this.fix_stalk_semetskiy,
    this.fix_amk_anoms_generate_art,
    this.fix_trade_dialog_timers3,
    this.fix_kot_hos,
    this.fix_esc_buldozer22,
    this.fix_gg_need_sleep,
    this.fix_val_zapis,
    this.fix_dead_military_esc,
    this.fix_yantar_arhara_mine1,
    this.fix_horrortime_begin2,
    this.fix_foto_monolitovets,
    this.fix_emb,
    this.fix_dead_military_esc2,
    this.fix_war_door_lab,
    this.fix_find_chip,
    this.fix_dragunov_ohota_talk,
    this.fix_marsh_band_spawn,
    this.fix_bar_arena_door_0000,
    this.fix_aem_admin,
    this.fix_news_check,
    this.fix_show_news,
    this.fix_kotobegemot_bar,
    this.fix_drop_boxes,
    this.fix_running_treasure,
    this.fix_jup_gun_3,
    this.fix_letters,
    this.fix_krest_topor,
    this.fix_sleep_bags,
    this.fix_bar_arena_triger,
    this.fix_wpn_toz34_arena,
    this.fix_explosive_barrel,
    this.fix_tamaz_body2,
    this.fix_gar_dm_novice,
    this.fix_rebind_keys,
    this.fix_podval_btr_nevid1,
    this.fix_spawn_bunker_sekret,
    this.fix_bunker_art_v_spiral_restrictor,
    this.fix_btr_nevid_krusha_kultorg,
    this.fix_yakut_agro,
    this.fix_spawn_monstrov,
    this.fix_marsh_m_car,
    this.fix_gar_no_gravity_vorota,
    this.fix_marsh_havan_restr,
    this.fix_explosive_barrel2,
    this.fix_gar_angar,
    this.free_marsh_baza_nebo,
    this.fix_sysh_treasure_box,
    this.fix_zone_ozero,
    this.fix_zat_fireball,
    this.fix_door_hospital_01_l_0003,
    this.fix_mil_physic_object_0001,
    this.fix_dragunov_ohota,
    this.fix_l10u_bunker_codedoor_key_0000,
    this.fix_buusty_kvest_task,
    this.fix_strelok_taynik_pda0,
    this.fix_esc_dinamit_panera,
    this.fix_hamster_kuznec6,
    this.fix_handmade_arts_cnt,
    this.make_free_prizrak,
    this.fix_land_arhara_biliyrd,
    this.fix_se_respawn,
    this.fix_stalker_kisluy,
    this.fix_trade_dialog_maks,
    this.fix_esc_surprise_box_015,
    this.fix_dsh_rukzak_storage,
    this.fix_pseudodog_forest,
    this.fix_l10u_bunker_codedoor_key_0000_2,
    this.fix_dsh_ogse_relations,
    this.fix_dsh_deadmans_table_proxy,
  }
  local version = ogse.load_var( vname, 0 )
  if version < table.getn( fixes ) then
    for i = version + 1, table.getn( fixes ) do
      fixes[ i ]( version )
    end
    ogse.save_var( vname, table.getn( fixes ), "u32" )
  end
  local fixes_on_info = {
    [ "vitamin_reyd_zadan_done" ] = {
      this.free_warlab_svobodovzu,
    },
    [ "borman_glushitel_done" ] = {
      this.free_freedom_limansk,
    },
    [ "derevny_zashita_done" ] = {
      this.free_lost_village_bandit,
      this.free_village_gulag_small,
    },
    [ "village_after_razborka" ] = {
      this.free_village_gulag_big,
    },
    [ "vkluchit_generator_done" ] = {
      this.free_generators_svoboda,
    },
    [ "spawn_kamen_udachy" ] = {
      this.free_hospital_black,
    },
  }
  for k, v in pairs( fixes_on_info ) do
    if db.actor:has_info( k ) and not processed_info[ k ] then
      log2( "%s: found fixes for '%s', applying...", script_name(), k )
      for _, f in ipairs( v ) do
        f()
        processed_info[ k ] = true
        local processed = ogse.load_var(
          script_name() .. ".processed_info", {}
        )
        table.insert( processed, k )
        ogse.save_var(
          script_name() .. ".processed_info", processed, "array_template",
          { "string" }
        )
      end
    end
  end
end


function on_spawn()
  local processed = ogse.load_var_safe( script_name() .. ".processed_info" )
    or {}
  for _, k in ipairs( processed ) do
    processed_info[ k ] = true
  end
  fix_bar_barman()
  fix_bar_angar_zoneguard()
  fix_bar_zastava_guard_3()
  fix_marsh_barman()
  fix_mil_physic_object0034()
  fix_puzir_arhara_vagonchik()
  fix_bar_arena_man()
  fix_val_door_nedostroyka()
  fix_yantar_ecolog_general()
end


-- Сделать труп журналиста, который случайно заспаунился живым
function kill_journalist_npc()
  local sobj = alife():story_object( story_ids.journalist_npc )
  if sobj then
    local obj = level.object_by_id( sobj.id )
    if obj then
      obj:kill( obj )
    else
      ogse.kill_offline_npc( sobj )
    end
  end
end

function free_smart_terrain( name, skip_npc )
  local skip_npc_keys = {}
  if skip_npc then
    for _, v in ipairs( skip_npc ) do
      skip_npc_keys[ v ] = true
    end
  end
  local strn = smart_terrain.get_smart_terrain_by_name( name )
  for id, v in pairs( strn.npc_info ) do
    local sobj = alife():object( id )
    if not skip_npc_keys[ sobj:name() ] then
      local pk = get_netpk( sobj, 1 )
      if pk:isOk() then
        local data = pk:get()
        local cd   = data.custom_data:getTable()
        cd.smart_terrains = nil
        data.custom_data:set( cd )
        pk:set( data )
      end
      smart_terrain.unregister_npc( sobj )
      sobj.smart_terrain_conditions = nil
      sobj:brain():update()
    end
  end
end


-- Убрать у сталкеров жесткую привязку к смарту, что бы они могли уходить.
function free_bar_visitors()
  free_smart_terrain( "bar_visitors" );
end
function free_bar_visitors_fix2( ver )
  -- выполнять только если уже выполнялся free_bar_visitors()
  if ver == 2 then
    free_smart_terrain( "bar_visitors" );
  end
end

function free_bar_ohotnik()
  free_smart_terrain( "bar_ohotnik", { "stalker_green_zahar" } );
end

function free_kalmyak_marsh()
  free_smart_terrain( "kalmyak_marsh", { "kalmyak" } );
end

function free_marsh_exit_nebo()
  free_smart_terrain( "marsh_exit_nebo", { "dyak", "esc_saha" } );
end

function free_marsh_hunters()
  free_smart_terrain( "marsh_hunters", { "marsh_dan" } );
end


function cleanup_respawners()
  se_respawn.iterate_respawners( function( respawner )
      if respawner.parent then return end
      local ids = {}
      for _, id in ipairs( respawner.spawned_obj ) do
        table.insert( ids, id )
      end
      for _, id in ipairs( ids ) do
        local sobj = alife():object( id )
        if sobj then
          local strn_id
          if ( IsStalker( sobj ) or IsMonster( sobj ) ) and sobj.smart_terrain_id then
            strn_id = sobj:smart_terrain_id()
          else
            strn_id = 65535
          end
          if strn_id ~= 65535 then
            local strn = alife():object( strn_id )
            if strn then
              if
                not smart_terrain.is_same_level_group(
                  object_level_name( strn ),
                  object_level_name( sobj )
                )
              then
                log2(
                  "[cleanup_respawners]: remove %s from %s: smart_terrain %s has different level group: %s and %s",
                  id, respawner:name(), strn:name(),
                  object_level_name( strn ),
                  object_level_name( sobj )
                )
                respawner:remove_spawned( id )
              end
            else
              log2(
                "[cleanup_respawners]: remove %s from %s: smart_terrain %s not found",
                id, respawner:name(), strn_id
              )
              respawner:remove_spawned( id )
            end
          end
        else
          log2( "[cleanup_respawners]: remove %s from %s (%s): not found", id, respawner:name(), tostring( respawner.amk_name ) )
          respawner:remove_spawned( id )
        end
      end
  end )
end


function remove_ogse_relation_reverse_table()
  ogse.delete_var( "ogse_relation_reverse_table" )
end


local zone_ameba = {
  [ "atp_anom_ameba"              ] =   221,
  [ "atp_zone_ameba1_1"           ] =   222,
  [ "atp_zone_ameba1_2"           ] =   223,
  [ "land_arhara_anom_ameba1"     ] =   897,
  [ "land_arhara_anom_ameba2"     ] =   898,
  [ "aver_zone_ameba1_1"          ] =  1012,
  [ "aver_zone_ameba1_2"          ] =  1013,
  [ "aver_zone_ameba1_3"          ] =  1014,
  [ "labirint_arhara_ameba1"      ] =   458,
  [ "labirint_arhara_ameba2"      ] =   459,
  [ "av_peshera_ameba1_verx"      ] =   541,
  [ "av_peshera_ameba1_niz1"      ] =   542,
  [ "av_peshera_ameba1_niz2"      ] =   543,
  [ "dcity_zone_ameba1_1"         ] =  1285,
  [ "dcity_zone_ameba1_2"         ] =  1286,
  [ "dcity_zone_ameba1_3"         ] =  1287,
  [ "dcity_zvezda1"               ] =  1288,
  [ "dcity_zvezda2"               ] =  1289,
  [ "gener_zone_ameba1_1"         ] =  1585,
  [ "gener_zone_ameba1_2"         ] =  1586,
  [ "gener_anom_ameba"            ] =  1587,
  [ "gener_zone_ameba1_3"         ] =  1631,
  [ "gen_anom_ameba_krusha"       ] =  1813,
  [ "gen_anom_ameba_zabor"        ] =  1851,
  [ "esc_zone_ameba1_elevator"    ] =  3809,
  [ "esc_zone_ameba1_bunker"      ] =  3810,
  [ "garbage_zone_ameba1_les"     ] =  3898,
  [ "agro_zone_ameba1_razvilka"   ] =  4462,
  [ "dark_zone_ameba1_ostanovka"  ] =  5242,
  [ "dark_zone_ameba1_zapravka"   ] =  5243,
  [ "military_zone_ameba1_ostanovka" ] = 7581,
  [ "yantar_zone_ameba1_ostrov"   ] =  8469,
  [ "yantar_zone_ameba1_garaz"    ] =  8470,
  [ "radar_zone_ameba1_uchenuy"   ] =  9205,
  [ "radar_zone_ameba1_vert"      ] =  9206,
  [ "radar_zone_ameba1_dom_kukla" ] =  9207,
  [ "prip_zone_ameba1_koleso"     ] = 10369,
  [ "stancia_2_zone_ameba1"       ] = 11430,
  [ "village_zone_ameba1_yma"     ] = 12910,
  [ "village_zone_ameba1_pole"    ] = 12911,
  [ "village_anom_ameba1"         ] = 13025,
  [ "marsh_zone_ameba1_mex_dvor"  ] = 13232,
  [ "marsh_zone_ameba1_vushka"    ] = 13233,
  [ "marsh_zone_ameba1_tele_baza" ] = 13234,
  [ "marsh_zone_ameba1_vagonu"    ] = 13235,
--  [ "marsh_ameba1"                ] = 13388,
  [ "marsh_ameba2"                ] = 13389,
  [ "marsh_ameba3"                ] = 13390,
  [ "peshera_arhara_ameba1"       ] = 13829,
  [ "puzir_zone_ameba1_u_vxoda"   ] = 14314,
  [ "puzir_zone_ameba1_zenter"    ] = 14315,
  [ "puzir_zone_ameba1_krest"     ] = 14316,
  [ "puzir_zone_ameba1_vert_zent" ] = 14317,
  [ "zat_zone_ameba1_sosnodub_00" ] = 15574,
  [ "zat_zone_ameba1_sosnodub_01" ] = 15575,
  [ "zat_zone_ameba1_sosnodub_02" ] = 15576,
  [ "zat_zone_ameba1_sosnodub_03" ] = 15577,
  [ "zat_zone_ameba1_sosnodub_04" ] = 15578,
}

function fix_zone_ameba()
  for n, id in pairs( zone_ameba ) do
    if not alife():object( n ) then
      log2( "fix_zone_ameba: %s not found, creating...", n )
      alife():create( id )
    end
  end
end


function fix_prizrak_wpn()
  local npcs = { "new_prizrak", "generators_prizrak", "chaes1_prizrak" }
  for _, name in ipairs( npcs ) do
    local sobj = alife():object( name )
    if sobj then
      alife():create(
        "wpn_dark_gauss",
        sobj.position, sobj.m_level_vertex_id, sobj.m_game_vertex_id,
        sobj.id
      )
      alife():create(
        "ammo_gauss",
        sobj.position, sobj.m_level_vertex_id, sobj.m_game_vertex_id,
        sobj.id
      )
    end
  end
end


function fix_val_rob_buying()
  local strn = smart_terrain.get_smart_terrain_by_name( "val_rob" )
  strn:lock_population( true )
end


function cleanup_rats()
  local levels = {
    [ "atp_for_test22" ] = true,
    [ "av_peshera"     ] = true,
--    [ "aver"           ] = true,
--    [ "dead_city"      ] = true,
    [ "l01_escape"     ] = true,
    [ "l02_garbage"    ] = true,
    [ "l03_agroprom"   ] = true,
    [ "l03u_agr_underground" ] = true,
    [ "l04_darkvalley" ] = true,
    [ "l04u_labx18"    ] = true,
    [ "l05_bar"        ] = true,
    [ "l06_rostok"     ] = true,
    [ "l07_military"   ] = true,
    [ "l08_yantar"     ] = true,
    [ "l10_radar"      ] = true,
    [ "l10u_bunker"    ] = true,
    [ "l11_pripyat"    ] = true,
--    [ "l12_stancia"    ] = true,
--    [ "l12_stancia_2"  ] = true,
--    [ "l12u_control_monolith" ] = true,
--    [ "l12u_sarcofag"  ] = true,
    [ "marsh"          ] = true,
    [ "peshera"        ] = true,
    [ "puzir"          ] = true,
  }
  local sm = ogse_signals.get_mgr()
  for i = 1, 65535 do
    local sobj = alife():object( i )
    if
      sobj and IsMonster( sobj )
      and sobj:smart_terrain_id() == 65535
      and levels[ object_level_name( sobj ) ]
      and not (
        se_respawn.get_respawner_by_npc_id( sobj.id )
        or dsh_respawn.get_respawner_by_npc_id( sobj.id )
      )
    then
      log2( "dsh: found extra %s on %s", sobj:name(), object_level_name( sobj ) )
      alife():release( sobj )
      sm:call( "on_release_npc", sobj.id )
    end
  end
end


function start_dsh_walking_job()
  local next_m = math.random( 0, 59 )
  dsh.start_gtimerDHMS(
    "dsh_walking_stalkers.periodic_job",
    0, 1, next_m, 0,
    "dsh_walking_stalkers.periodic_job"
  )
end


function fix_prizrak_gauss()
  local npcs = { "new_prizrak", "generators_prizrak", "chaes1_prizrak" }
  for _, name in ipairs( npcs ) do
    local sobj = alife():object( name )
    if sobj then
      local sid = sobj.m_story_id
      alife():release( sobj )
      alife():create( alife():spawn_id( sid ) )
    end
  end
end


function fix_gener_spawn_tvari()
  local tvari = {
    [ "gener_electro_chim1_podstanziy" ] =  1847,
    [ "gener_electro_chim2_podstanziy" ] =  1848,
    [ "generators_bloodsucker_strong1" ] =  1771,
    [ "gen_bloodsucker_na_krushe"      ] =  1816,
    [ "red_bloodsucker_strong_0002"    ] = 14936,
    [ "red_m_poltergeist_strong_flame" ] = 14943,
    [ "red_m_poltergeist_normal_tele"  ] = 14945,
    [ "red_m_poltergeist_normal_tele_0000" ] = 14946,
  }
  for name, spawn_id in pairs( tvari ) do
    local sobj = alife():object( name )
    if sobj then
      log2( "dsh: deleting %s", name )
      smart_terrain.unregister_npc( sobj )
      se_respawn.on_release_npc( sobj.id )
      dsh_respawn.on_release_npc( sobj.id )
      alife():release( sobj )
      log2( "dsh: creating %s, spawn_id = %s", name, spawn_id )
      sobj = alife():create( spawn_id )
      ASSERT( name == sobj:name(), "wrong spawn %s ~= %s", name, sobj:name() )
    end
  end
end


function fix_rx_wmgr_boxes()
  local boxes = {}
  for id = 1, 65534 do
    local sobj = alife():object( id )
    if
      sobj and sobj:section_name() == "inventory_box"
      and sobj.position.y == -300
    then
      log2( "dsh: found %s on %s", sobj:name(), object_level_name( sobj ) )
      boxes[ id ] = sobj
    end
  end
  for id = 1, 65534 do
    local sobj = alife():object( id )
    if sobj and boxes[ sobj.parent_id ] then
      log2( "dsh: found %s on %s", sobj:name(), object_level_name( sobj ) )
      alife():release( sobj )
    end
  end
  for id, sobj in pairs( boxes ) do
    alife():release( sobj )
  end
end


function fix_nevid_monolit()
  local sobj = alife():object( "nevid_monolit" )
  if sobj and sobj:alive() then
    local sid = sobj.m_story_id
    alife():release( sobj )
    sobj = alife():create( alife():spawn_id( sid ) )
    pk = get_netpk( sobj, 1 )
    if pk:isOk() then
      local data = pk:get()
      data.visual_name = "new\\supernevidimka_orig"
      pk:set( data )
    end
  end
end


function free_aver_otshelnik()
  free_smart_terrain( "aver_otshelnik" );
end


function free_aver_hunter()
  free_smart_terrain( "aver_hunter" );
end


function fix_red_psy_dog_phantom()
  local sobj = alife():object( "red_psy_dog_phantom" )
  if sobj then
    log2( "dsh: deleting %s", sobj:name() )
    smart_terrain.unregister_npc( sobj )
    se_respawn.on_release_npc( sobj.id )
    dsh_respawn.on_release_npc( sobj.id )
    alife():release( sobj )
  end
end


local bar_walk_fixes = {
  [ "bar_barman" ] = "bar_barman_hole_walk",
  [ "bar_dolg_bunker_0002" ] = "bar_dolg_bunker_guard_5_walk",
}

function fix_bar_barman()
  if level.name() == "l05_bar" then
    for name, path in pairs( bar_walk_fixes ) do
      local sobj = alife():object( name )
      if sobj then
        local patrol = patrol( path )
        alife():teleport_object(
          "", patrol:point( 0 ),
          patrol:level_vertex_id( 0 ), patrol:game_vertex_id( 0 ),
          sobj.id
        )
      end
    end
  end
end


function free_green_forest()
  free_smart_terrain( "green_forest" );
end


function free_stalker_forest_bashya()
  free_smart_terrain( "stalker_forest_bashya" );
end


function remove_marsh_ameba1()
  local sobj = alife():object( "marsh_ameba1" )
  if sobj then
    alife():release( sobj )
  end
end


function free_warlab_svobodovzu()
  free_smart_terrain( "warlab_svobodovzu" );
end


function free_freedom_limansk()
  free_smart_terrain( "freedom_limansk" );
end


function free_lost_village_bandit()
  free_smart_terrain( "lost_village_bandit" );
end


function free_village_gulag_small()
  free_smart_terrain( "village_gulag_small" );
end


function free_village_gulag_big()
  free_smart_terrain( "village_gulag_big" );
end


function fix_crow_respawns()
  local sm = ogse_signals.get_mgr()
  for id = 1, 65534 do
    local crow = alife():object( id )
    if crow and string.find( crow:name(), "^m_crow") then
      sm:call( "on_release_npc", id )
      alife():release( crow )
    end
  end
end


function fix_taynik_alexandrych()
  for id = 1, 65534 do
    local sobj = alife():object( id )
    if sobj and sobj:section_name() == "m_inventory_box_alex_upiter" then
      alife():release( sobj )
      buusty_dialog.taynik_alexandrych_spawn()
      break
    end
  end
end


function fix_military_fotomuzhik()
  local names = { "military_fotomuzhik", "milit_zapas_fotomuzhik" }
  for _, n in ipairs( names ) do
    local sobj = alife():object( n )
    if sobj and sobj:alive() then
      pk = get_netpk( sobj, 1 )
      if pk:isOk() then
        local data = pk:get()
        data.visual_name = "new\\supernevidimka_orig"
        pk:set( data )
      end
    end
  end
end


function free_generators_orly()
  free_smart_terrain( "generators_orly", { "zemlyk" } );
end


function fix_af_pero()
  for i = 1, 65535 do
    local sobj = alife():object( i )
    if sobj and sobj:section_name() == "af_pero" then
      log2( "dsh: found %s", sobj:name() )
      local obj = level.object_by_id( sobj.id )
      if obj then
        obj:set_condition( 1 )
      end
      local tbl = amk.get_item_params( sobj )
      tbl.condition = 1
      amk.set_item_params( tbl, sobj )
    end
  end
end


function respawn_gavr_and_co()
  local sids = {
    [ 9623 ] = "mil_trader_gavr",
    [ 9624 ] = "mil_gavr_bodyguard1",
    [ 9625 ] = "mil_gavr_bodyguard2",
  }
  for sid, sect in pairs( sids ) do
    while alife():story_object( sid ) do
      local sobj = alife():story_object( sid )
      if sobj then
        log2(
          "dsh: found %s ( %s, %s )",
          sobj:name(), sobj:community(), object_level_name( sobj )
        )
        local pk = get_netpk( sobj, 1 )
        if pk:isOk() then
          local data = pk:get()
        end
        local strn_id = sobj:smart_terrain_id()
        if strn_id ~= 65535 then
          local strn = alife():object( strn_id )
          if strn then
            log2( "dsh: smart_terrain = %s", strn:name() )
            smart_terrain.unregister_npc( sobj )
          end
        end
        ogse_signals.get_mgr():call( "on_release_npc", sobj.id )
        alife():release( sobj )
      end
    end
  end
  if
    db.actor:has_info( "informator_pda_done" )
    and not db.actor:has_info( "info_gavr_dead" )
  then
    new_spawn.bar_informator()
  end
end


function remove_padar_spawn_zombi_kukla_restrictor()
  if db.actor:has_info( "muha_kukla_have" ) then
    local sobj = alife():object( "padar_spawn_zombi_kukla_restrictor" )
    if sobj then
      log2( "dsh: found %s", sobj:name() )
      alife():release( sobj )
    end
  end
end


function fix_aes_battle_sounds()
  local names = {
    "aes_space_restrictor_sound_battle_0000",
    "aes_space_restrictor_sound_battle_0001",
  }
  for _, n in ipairs( names ) do
    local sobj = alife():object( n )
    if sobj then
      log2( "dsh: found %s, removing...", sobj:name() )
      alife():release( sobj )
    end
  end
end


function fix_marsh_barman()
  if level.name() == "marsh" then
    local sobj = alife():object( "marsh_barman" )
    if sobj then
      local patrol = patrol( "marsh_barman_walk" )
      alife():teleport_object(
        "", patrol:point( 0 ),
        patrol:level_vertex_id( 0 ), patrol:game_vertex_id( 0 ),
        sobj.id
      )
    end
  end
end


function fix_pri_battle_sounds()
  local names = {
    "pri_ambient_battle_sound_zone_0000",
    "pri_ambient_battle_sound_zone_0001",
    "pri_ambient_battle_sound_zone_0002",
    "pri_ambient_battle_sound_zone_0003",
  }
  for _, n in ipairs( names ) do
    local sobj = alife():object( n )
    if sobj then
      log2( "dsh: found %s, removing...", sobj:name() )
      alife():release( sobj )
    end
  end
end


function fix_ogse_actor_conditions_mgr_cam_inert()
  ogse.delete_var( "ogse_actor_conditions_mgr.cam_inert" )
  cmd( "cam_inert", "0" )
end


function fix_esc_bridge_pass_fire()
  db.actor:disable_info_portion( "esc_bridge_pass_fire" )
  db.actor:disable_info_portion( "sherstuk_enemy" )
end


function respawn_gavr_and_co_2( ver )
  -- выполнять только, если выполнялся respawn_gavr_and_co()
  if ver >= 29 then
    respawn_gavr_and_co()
  end
end


function fix_detector_suit()
  local obj = db.actor:object( "detector_suit" )
  if obj then
    local sobj = alife():object( obj:id() )
    if sobj then
      alife():release( sobj )
    end
  end
end


function free_generators_svoboda()
  free_smart_terrain( "generators_svoboda" );
end


function free_hospital_black()
  free_smart_terrain( "hospital_black" );
end


function fix_mil_tush1()
  local respawners = {
    "av_peshera_rat1",
    "av_peshera_rat2",
    "av_peshera_rat3",
    "av_peshera_rat4",
    "av_peshera_rat5",
    "esc_fracture",
    "dv_sak_1monstr",
    "mil_tush1",
    "mil_himer_family",
  }
  for _, name in ipairs( respawners ) do
    local resp = dsh_respawn.get_respawner( name )
    if resp then
      for _, v in ipairs( resp.spawned_obj ) do
        resp:remove_spawned( v )
      end
    end
  end
end


function fix_bar_angar_zoneguard()
  local sobj = alife():object( "bar_angar_zoneguard" )
  if not sobj then
    log2( "dsh: bar_angar_zoneguard not found, respawning..." )
    alife():create( 6759 )
  end
end


-- пересоздать дверь в оружейку свободы
function fix_mil_physic_object0034()
  if level.name() == "l07_military" then
    local sobj = alife():object( "mil_physic_object0034" )
    if sobj then
      alife():release( sobj )
      alife():create( 7854 )
    end
  end
end


function fix_grib_respawn()
  braad_test.grib_respawn()
end


function fix_horrortime_begin()
  log2( "dsh: starting up horror time timer" )
  meceniy_in_hell.horrortime_begin( true )
end


function fix_af_transform_cnt()
  dsh.reset_af_transform_cnt()
end


function fix_trade_dialog_timers()
  db.actor:disable_info_portion( "price_doktor" )
  dsh.start_trade_dialog_timer( "sidor", 168, 10 )
  dsh.start_trade_dialog_timer( "barman"   )
  dsh.start_trade_dialog_timer( "petrenko" )
  dsh.start_trade_dialog_timer( "skraga"   )
  dsh.start_trade_dialog_timer( "sakharov" )
  dsh.start_trade_dialog_timer( "sak"      )
end


function fix_trade_dialog_timers2()
  dsh.start_trade_dialog_timer( "kuznezov", 168, 10 )
  dsh.start_trade_dialog_timer( "jlob"     )
  dsh.start_trade_dialog_timer( "sherstyk" )
end


function fix_stalk_semetskiy()
  if db.actor:has_info( "odnonogiy_first_start" ) then
    local sobj = alife():object( "stalk_semetskiy" )
    if sobj then
      log2( "dsh: found %s", sobj:name() )
      alife():release( sobj )
      log2( "dsh: ... removed" )
    end
  end
end


function fix_amk_anoms_generate_art()
  ogse.delete_var( "amk_anoms.generate_art" )
end


function fix_trade_dialog_timers3()
  dsh.start_trade_dialog_timer( "voron" )
end


function fix_bar_zastava_guard_3()
  local sobj = alife():story_object( story_ids.bar_zastava_commander ) -- 518
  if not sobj then
    log2( "dsh: bar_zastava_commander not found, respawning..." )
    alife():create( alife():spawn_id( story_ids.bar_zastava_commander ) )
  end
end


function fix_kot_hos()
  if db.actor:has_info( "we_ne_chmuri" ) then
    local sobj = alife():object( "kot_hos" )
    if sobj then
      log2( "dsh: found %s", sobj:name() )
      alife():release( sobj )
      log2( "dsh: ... removed" )
    end
  end
end


function fix_esc_buldozer22()
  local sobj = alife():object( "esc_buldozer22" )
  if sobj then
    log2( "dsh: found %s", sobj:name() )
    alife():release( sobj )
    log2( "dsh: ... removed" )
  end
end


function fix_gg_need_sleep()
  log2( "dsh: starting gg_need_sleep timer ..." )
  dsh_sleep.run_gg_need_sleep_timer()
end


function fix_val_zapis()
  for i = 1, 65535 do
    local sobj = alife():object( i )
    if sobj and string.find( sobj:section_name(), "^val_zapis_" ) then
      log2( "dsh: found %s, removing ...", sobj:name() )
      alife():release( sobj )
    end
  end
end


function fix_dead_military_esc()
--  if db.actor:dont_has_info( "snp_borov1_start" ) then
--    local sobj = alife():object( "dead_military_esc" )
--    if sobj then
--      log2( "dsh: found %s, spawning: snp_pda1", sobj:name() )
--      alife():create(
--        "snp_pda1",
--        sobj.position, sobj.m_level_vertex_id, sobj.m_game_vertex_id,
--        sobj.id
--      )
--    end
--  end
end


function fix_yantar_arhara_mine1()
  local sobj = alife():object( "yantar_arhara_mine1" )
  if sobj then
    log2( "dsh: found %s", sobj:name() )
    alife():release( sobj )
    log2( "dsh: ... removed" )
  end
end


function fix_horrortime_begin2()
  log2( "dsh: stopping the horror time timer" )
  meceniy_in_hell.horrortime_stop()
end


function fix_foto_monolitovets()
  local names = {
    "milit_zapas_fotomuzhik",
    "foto_monolitovets",
    "dcity_dok_nevidim",
    "wolffrend_talk",
    "bibliofrend_talk",
    "bibliofrend_talk_black",
    "esc_foto_muzhik",
    "zapasnoy_foto_muzhik",
  }
  for _, n in ipairs( names ) do
    local sobj = alife():object( n )
    if sobj and sobj:alive() then
      log2( "dsh: found %s", sobj:name() )
      pk = get_netpk( sobj, 1 )
      if pk:isOk() then
        local data = pk:get()
        data.visual_name = "new\\supernevidimka_orig"
        pk:set( data )
        log2( "dsh: ... changed" )
      end
    end
  end
end


function fix_emb( ver )
  if ver == 0 then return end
  local idx = amk.load_variable( "emb_idx", 0 )
  if idx > 0 then
    log2( "dsh: found emb_idx = %s, disabling...", idx )
    emb.worker_clean( idx )
    amk.del_variable( "emb_idx" )
    log2( "dsh: ... done" )
  end
  local infos = {
    "emb_container_done",
    "embt_vp1_done",
    "emb_kill_tm_done",
    "embt_td1_done",
    "emb_done",
  }
  news_manager.skip_send_task = true
  for _, info in ipairs( infos ) do
    db.actor:give_info_portion( info )
  end
  if
    db.actor:has_info( "ten_monolita_talk_done" )
    and not db.actor:has_info( "tm_find_info_done" )
  then
    level_tasks.set_task_state( task.completed, "tm_find_info", 0 )
    level_tasks.set_task_state( task.completed, "tm_find_info", 1 )
  end
  dsh.timeout( 1, function()
    news_manager.skip_send_task = false
  end )
end


function fix_dead_military_esc2()
  local remove_items = {
    "snp_note1",
    "snp_pda1",
  }
  for i = 1, 65534 do
    local sobj = alife():object( i )
    if sobj then
      local sect = sobj:section_name()
      if remove_items[ sect ] then
        log2( "dsh: found %s, deleting...", sobj:name() )
        alife():release( sobj )
      end
    end
  end
  local sobj = alife():story_object( 19901 )
  if sobj then
    log2( "dsh: found %s, deleting...", sobj:name() )
  end
  local infos = {
    "snp_borov1_start",
    "snp_find_sniper1_done",
    "snp_borov1_done",
    "snp_find_name1_done",
    "snp_kotobegemot1_done",
    "snpt_dt1_done",
    "snp_kotobegemot2_done",
    "snp_bioradar_parts_done",
  }
  news_manager.skip_send_task = true
  for _, info in ipairs( infos ) do
    db.actor:give_info_portion( info )
  end
  dsh.timeout( 1, function()
    news_manager.skip_send_task = false
  end )
end


function fix_war_door_lab()
  local sobj = alife():object( "war_door_lab" )
  if sobj then
    log2( "dsh: found %s, respawning...", sobj:name() )
    alife():release( sobj )
    alife():create( 14960 )
  end
end


function fix_find_chip( ver )
  if ver == 0 then return end
  news_manager.skip_send_task = true
  if
    db.actor:has_info( "find_chip_start" )
    and not db.actor:has_info( "find_chip_have" )
  then
    level_tasks.set_task_state( task.completed, "find_chip", 0 )
    level_tasks.set_task_state( task.completed, "find_chip", 1 )
  end
  if
    db.actor:has_info( "vasily_chertez_start" )
    and not db.actor:has_info( "vasily_chertez_done" )
  then
    level_tasks.set_task_state( task.completed, "vasily_chertez", 0 )
    level_tasks.set_task_state( task.completed, "vasily_chertez", 1 )
  end
  dsh.timeout( 1, function()
    news_manager.skip_send_task = false
  end )
end


function fix_dragunov_ohota_talk( ver )
  if ver == 0 then return end
  if
    db.actor:has_info( "dragunov_ohota_start" )
    and not db.actor:has_info( "dragunov_ohota_talk" )
  then
    log2( "dsh: giving 'dragunov_ohota_talk' info_portion" )
    db.actor:give_info_portion( "dragunov_ohota_talk" )
  end
end


-- пересоздать вагончик в ЗЛ
function fix_puzir_arhara_vagonchik()
  if level.name() == "puzir" then
    local sobj = alife():object( "puzir_arhara_vagonchik" )
    if sobj then
      alife():release( sobj )
      alife():create( 14372 )
    end
  end
end


function fix_bar_arena_door_0000()
  all_spawn_fix.release_allspawn_object( "bar_arena_door_0000" )
end


function fix_marsh_band_spawn()
  if not db.actor:has_info( "marsh_band_spawn" ) then
    log2( "dsh: marsh_band_spawn not found, executing braad_test.marsh_band_spawn()" )
    braad_test.marsh_band_spawn()
  end
end


function fix_aem_admin()
  local id = xr_logic.pstor_retrieve( db.actor, "aem_id", 0 )
  if id > 0 then
    local sobj = alife():object( id )
    if sobj then
      log2( "dsh: found %s, removing...", sobj:name() )
      alife():release( sobj )
      db.storage[ db.actor:id() ].pstor[ "aem_id" ] = nil
    end
  end
end


function fix_bar_arena_man()
  local sobj = alife():story_object( story_ids.bar_arena_locator ) -- 571
  if not sobj then
    log2( "dsh: bar_arena_man not found, respawning..." )
    alife():create( alife():spawn_id( story_ids.bar_arena_locator ) )
  end
end


function fix_news_check()
  if amk.has_g_timer( "news_check" ) then
    log2( "dsh: found news_check amk timer, removing..." )
    amk.remove_timer( "news_check" )
  end
end


function fix_show_news()
  if amk.has_g_timer( "show_news" ) then
    log2( "dsh: found show_news amk timer, removing..." )
    amk.remove_timer( "show_news" )
  end
end


function fix_bandit_goodwill() end


function fix_kotobegemot_bar()
  local sobj = alife():story_object( 19901 )
  if sobj then
    log2( "dsh: found %s, deleting...", sobj:name() )
    alife():release( sobj )
  end
end


function fix_drop_boxes( ver )
  if ver == 0 then return end
  for _, v in ipairs( xr_box_data.def_boxes ) do
    local name, spawn_id = unpack( v )
    local sobj = alife():object( name )
    if sobj then
      log2( "dsh: found %s, skipping", sobj:name() )
    else
      log2( "dsh: %s not found, respawning...", name )
      sobj = alife():create( spawn_id )
      local pk = get_netpk( sobj, 1 )
      ASSERT( pk:isOk(), "can't read netpacket of %s", sobj:name() )
      local data = pk:get()
      data.visual_name = [[physics\box\box_wood_01]]
      data.custom_data:setString(
        "[drop_box]\norig_name = " .. name .. "\ncommunity = def_box\n"
      )
      data.physic_type = 3
      data.mass        = 10
      pk:set( data )
    end
  end
end


function fix_running_treasure()
  dsh.start_gtimerDHMS(
    "dsh_running_treasure.clear_rnd_treasure",
    0, math.random( 20, 24 * 7 ), 0, 0,
    "dsh_running_treasure.spawn_rnd_treasure"
  )
end


function fix_jup_gun_3()
  local items = {
    "jup_gun_2", "jup_gun_3",
    "jup_ammo_1", "jup_ammo_2", "jup_ammo_3", "jup_ammo_4", "jup_ammo_5",
    "jup_ammo_6", "jup_ammo_7",
  }
  for _, n in ipairs( items ) do
    local sobj = alife():object( n )
    if sobj then
      log2( "dsh: found %s, removing...", sobj:name() )
      alife():release( sobj )
    end
  end
end


function fix_letters( ver )
  if ver == 0 then return end
  local items = {}
  db.actor:iterate_inventory(
    function( npc, obj )
      if obj:section() == "letter" then
        table.insert( items, obj )
      end
    end,
    db.actor
  )
  for _, obj in ipairs( items ) do
    log2( "dsh: found %s, removing...", obj:name() )
    ogse.remove_item_from_inventory( obj )
  end
end


function fix_krest_topor( ver )
  if ver == 0 then return end
  if
    db.actor:has_info( "krest_topor" )
    and not db.actor:has_info( "krest_topor_done" )
  then
    log2( "dsh: giving 'krest_topor_done' info_portion" )
    news_manager.skip_send_task = true
    db.actor:give_info_portion( "krest_topor_done" )
    dsh.timeout( 0, function()
      news_manager.skip_send_task = false
    end )
  end
end


function fix_sleep_bags()
  -- Подушка на диване, в подвале ДН.
  dsh.spawn_physic_sleep_bag(
    vector():set( -214.66897583008,-22.854312896729,-127.25451660156 ),
    39266, 59
  )
  -- На АС, в штабе.
  dsh.spawn_physic_sleep_bag(
    vector():set( -19.310693740845,-3.7826442718506,-21.311328887939 ),
    288157, 1593
  )
  -- У Борова, в ТД.
  dsh.spawn_physic_sleep_bag(
    vector():set( 39.124752044678,4.880298614502,-81.890159606934 ),
    223240, 1100
  )
  -- У ученых в бункере, на Янтаре.
  dsh.spawn_physic_sleep_bag(
    vector():set( 30.377950668335,-10.974708557129,-279.49533081055 ),
    54978, 1480
  )
  -- На Баре, в штабе Долга.
  dsh.spawn_physic_sleep_bag(
    vector():set( 232.12272644043,-5.1097793579102,128.38359069824 ),
    59078, 1200
  )
  -- В Баре, у ремонтников.
  dsh.spawn_physic_sleep_bag(
    vector():set( 113.90551757813,-4.9745478630066,13.434575080872 ),
    33613, 1239
  )
  -- На Агропроме, на втором этаже, над сталкерами.
  dsh.spawn_physic_sleep_bag(
    vector():set( 0.75571030378342,7.836715221405,14.530187606812 ),
    239682, 682
  )
  -- На Свалке, в ангаре.
  dsh.spawn_physic_sleep_bag(
    vector():set( -73.496315002441,-1.8777117729187,16.13635635376 ),
    134381, 330
  )
  -- На Болотах, у охотников.
  dsh.spawn_physic_sleep_bag(
    vector():set( 409.00204467773,3.5339589118958,236.85739135742 ),
    409496, 3546
  )
  -- На Болотах, на базе ЧН.
  dsh.spawn_physic_sleep_bag(
    vector():set( -141.90623474121,1.1168230772018,-318.71026611328 ),
    75332, 3374
  )
  -- На Генераторах, в развалинах дома.
  dsh.spawn_physic_sleep_bag(
    vector():set( -122.82690429688,38.734680175781,-522.4990234375 ),
    194439, 3089
  )
  -- В Красном Лесу, у моста.
  dsh.spawn_physic_sleep_bag(
    vector():set( -119.96662902832,0.89263081550598,-256.01147460938 ),
    9112, 3241
  )
  -- В Красном Лесу, в вогончике у сталкеров.
  dsh.spawn_physic_sleep_bag(
    vector():set( 14.4216381073,1.4473948478699,-46.648189544678 ),
    74929, 3290
  )
  -- На АТП, рядом с Калининым.
  dsh.spawn_physic_sleep_bag(
    vector():set( -173.61164855957,3.5274684429169,225.39572143555 ),
    125764, 2799
  )
  -- На Неразведанной Земле, в домике у Отшельника.
  dsh.spawn_physic_sleep_bag(
    vector():set( -344.14367675781,-8.6550722122192,-7.5538892745972 ),
    277313, 2889
  )
end


-- пересоздать дверь в оружейку Борова
function fix_val_door_nedostroyka()
  if level.name() == "l04_darkvalley" then
    local sobj = alife():object( "val_door_nedostroyka" )
    if sobj then
      alife():release( sobj )
      alife():create( 5713 )
    end
  end
end


function fix_bar_arena_triger()
  local bad_sr = {
    "bar_arena_triger",
    "bar_arena_comment_1",
    "bar_arena_comment_1_0000",
    "bar_arena_comment_1_0001",
    "bar_arena_rank_checker",
    "bar_arena_check_death",
    "bar_arena_comment_1_0002",
    "bar_arena_comment_1_0003",
    "bar_arena_comment_1_0004",
    "bar_arena_comment_1_0005",
    -- "bar_arena_restrictor",
  }
  for _, n in ipairs( bad_sr ) do
    local sobj = alife():object( n )
    if sobj then
      log2( "dsh: found %s, removing...", sobj:name() )
      alife():release( sobj )
    end
  end
end


function fix_wpn_toz34_arena( ver )
  if ver == 0 then return end
  for id = 1, 65534 do
    local sobj = alife():object( id )
    if sobj and isMagazinedWeapon( sobj ) then
      local ammo = parse_names(
        get_string( sobj:section_name(), "ammo_class", "" )
      )
      local pk = get_netpk( sobj, 1 )
      if pk:isOk() then
        local data      = pk:get()
        local ammo_type = data.ammo_type
        if ammo_type >= table.getn( ammo ) then
          log2(
            "dsh: found wrong ammo_type: %s: %s >= %s",
            sobj:name(), ammo_type, table.getn( ammo )
          )
          data.ammo_type = 0
          pk:set( data )
        end
      end
    end
  end
end


function fix_explosive_barrel( ver )
  local loc  = {
    [ "l01_escape"     ] = true,
    [ "l02_garbage"    ] = true,
    [ "l03_agroprom"   ] = true,
    [ "l04_darkvalley" ] = true,
    [ "l05_bar"        ] = true,
    [ "l07_military"   ] = true,
    [ "marsh"          ] = true,
  }
  local sect = {
    [ "explosive_barrel"    ] = true,
    [ "explosive_fuelcan"   ] = true,
    [ "explosive_mobiltank" ] = true,
  }
  for i = 1, 65535 do
    local sobj = alife():object( i )
    if
      sobj and sect[ sobj:section_name() ]
      and loc[ object_level_name( sobj ) ]
    then
      log2( 
        "dsh: found %s on %s, removing", sobj:name(), object_level_name( sobj )
      )
      alife():release( sobj )
    end
  end
end


function fix_tamaz_body2()
  local sobj = alife():object( "tamaz_body2" )
  if sobj then
    log2( "dsh: found %s, removing...", sobj:name() )
    alife():release( sobj )
  end
end


function fix_gar_dm_novice( ver )
  if ver == 0 then return end
  local names = {
    [ "gar_dm_novice"   ] = 3970,
    [ "gar_seryi_drug2" ] = 4032,
    [ "gar_seryi_drug3" ] = 4051,
  }
  for name, spawn_id in pairs( names ) do
    local sobj = alife():object( name )
    if sobj then
      log2( "dsh: found %s, recreating and teleporting...", sobj:name() )
      local pos = sobj.position
      local lvid, gvid = sobj.m_level_vertex_id, sobj.m_game_vertex_id
      alife():release( sobj )
      sobj = alife():create( spawn_id )
      alife():teleport_object( "", pos, lvid, gvid, sobj.id )
    end
  end
end


function fix_rebind_keys( ver )
  if ver == 0 then return end
  local keys = {
    [ "night_vision" ] = "ogse_nv_bind",
    [ "scores"       ] = "ogse_antirad_bind",
    [ "cam_4"        ] = "ogse_energy_drink_bind",
    [ "cam_3"        ] = "ogse_yod_bind",
    [ "torch"        ] = "ogse_bipsizon_bind",
    [ "drop"         ] = "ogse_handradio_bind",
    [ "buy_menu"     ] = "ogse_quicksave_bind",
  }
  local data = dsh_cfg.get_data()
  for k, v in pairs( keys ) do
    local dik = get_console():get_integer( v )
    if v then
      local kn = ogse_rebind_key.dik_to_name( dik )
      if kn ~= "" then
        log2( "dsh: rebind %s to %s", k, kn )
        data[ k ] = kn
        cmd( "bind " .. k, kn )
      end
    end
  end
  dsh_cfg.save()
end


function fix_podval_btr_nevid1( var )
  for _, name in ipairs({ "podval_btr_nevid1", "podval_btr_nevid2" }) do
    local sobj = alife():object( name )
    if sobj then
      log2( "dsh: found %s, removing...", sobj:name() )
      alife():release( sobj )
    end
  end
end


function fix_spawn_bunker_sekret( ver )
  if ver == 0 then return end
  local items = {
    [ "neizv_zapiska" ] = {
      [ "args" ] = { vector():set( 7.608, -22.439, 13.871 ), 7695, 2773 },
    },
    [ "osnova_fotik"  ] = {
      [ "args" ] = { vector():set( 7.608, -22.439, 13.871 ), 7695, 2773 },
    },
  }
  for i = 1, 65535 do
    local sobj = alife():object( i )
    if
      sobj and items[ sobj:section_name() ]
      and sobj.parent_id == 65535
      and object_level_name( sobj ) == "l10u_bunker"
    then
      items[ sobj:section_name() ].sobj = sobj
    end
  end
  for k, v in pairs( items ) do
    if v.sobj then
      log2( "dsh: found %s, recreating...", v.sobj:name() )
      alife():release( v.sobj )
      alife():create( k, unpack( v.args ) )
    end
  end
end


function fix_bunker_art_v_spiral_restrictor( ver )
  local sobj = alife():object( "bunker_art_v_spiral_restrictor" )
  if sobj then
    log2( "dsh: found %s, removing...", sobj:name() )
    alife():release( sobj )
  end
end


function fix_btr_nevid_krusha_kultorg( ver )
  local sobj = alife():object( "btr_nevid_krusha_kultorg" )
  if sobj then
    log2( "dsh: found %s, removing...", sobj:name() )
    alife():release( sobj )
  end
end


function fix_yantar_ecolog_general( ver )
  if level.name() == "l08_yantar" then
    local sobj = alife():object( "yantar_ecolog_general" )
    if sobj then
      local patrol = patrol( "yan_ucheniy_walk_talk" )
      alife():teleport_object(
        "", patrol:point( 0 ),
        patrol:level_vertex_id( 0 ), patrol:game_vertex_id( 0 ),
        sobj.id
      )
    end
  end
end


function fix_yakut_agro( ver )
  if ver == 0 then return end
  local sobj = alife():story_object( story_ids.yakut_agro ) -- 9630
  if not sobj then
    log2( "dsh: respawning yakut_agro..." )
    alife():create( alife():spawn_id( story_ids.yakut_agro ) )
  end
end


function fix_spawn_monstrov( ver )
  if ver == 0 then return end
  local sm = ogse_signals.get_mgr()
  for i = 1, 65535 do
    local sobj = alife():object( i )
    if
      sobj and IsMonster( sobj ) and sobj:clsid() == clsid.zombie_s
      and sobj:smart_terrain_id() == 65535
      and object_level_name( sobj ) == "l01_escape"
      and not (
        se_respawn.get_respawner_by_npc_id( sobj.id )
        or dsh_respawn.get_respawner_by_npc_id( sobj.id )
      )
    then
      log2( "dsh: found extra %s on %s", sobj:name(), object_level_name( sobj ) )
      alife():release( sobj )
      sm:call( "on_release_npc", sobj.id )
    end
  end
end


function fix_marsh_m_car( ver )
  local cars = { "veh_car_baggi", "mar_zil130" }
  for _, name in ipairs( cars ) do
    local sobj = alife():object( name )
    if sobj then
      log2( "dsh: found %s, removing...", sobj:name() )
      alife():release( sobj )
    end
  end
end


function fix_gar_no_gravity_vorota( ver )
  local sobj = alife():object( "gar_no_gravity_vorota" )
  if sobj then
    log2( "dsh: found %s, removing...", sobj:name() )
    alife():release( sobj )
  end
end


function fix_marsh_havan_restr( ver )
  local sobj = alife():object( "marsh_havan_restr" )
  if sobj then
    log2( "dsh: found %s, removing...", sobj:name() )
    alife():release( sobj )
  end
end


function fix_explosive_barrel2( ver )
  if ver == 0 then return end
  fix_explosive_barrel( ver )
end


function fix_gar_angar( ver )
  if ver == 0 then return end
  if
    db.actor:has_info( "garbage_meetstalker_done" )
    or db.actor:has_info( "garbage_meetstalker_die" )
  then
    local sobj = alife():object( "gar_angar" )
    if sobj then
      log2( "dsh: found %s, changing profile...", sobj:name() )
      ogse_signals.get_mgr():call( "on_empty_smart_terrain", sobj )
    end
  end
end


function free_marsh_baza_nebo()
  free_smart_terrain( "marsh_baza_nebo", { "clear_scy_leader", "agr_nebo_trader" } );
end


function fix_sysh_treasure_box()
  if
    not (
      db.actor:has_info( "treasure_sysh_start" )
      or db.actor:has_info( "treasure_sysh_have" )
    )
  then
    local sobj = alife():story_object( story_ids.sysh_treasure_box ) -- 9663
    if sobj then
      log2( "dsh: found %s, removing...", sobj:name() )
      alife():release( sobj )
    end
  end
end


function fix_zone_ozero( ver )
  local sobj = alife():create(
    "zone_ozero",
    vector():set( 58.848209381104, 1.0079244375229, 367.44982910156 ),
    276095, 3760
  )
  log2( "[%s]: created %s", script_name(), sobj:name() )
end


function fix_zat_fireball( ver )
  if ver == 0 then return end
  local anoms = {
    [ "zat_fireball_1" ] = 15603,
    [ "zat_fireball_2" ] = 15604,
    [ "zat_psychic_1"  ] = 15606,
    [ "zat_psychic_2"  ] = 15607,
    [ "zat_psychic_3"  ] = 15608,
    [ "zat_psychic_4"  ] = 15609,
    [ "zat_psychic_5"  ] = 15610,
    [ "zat_psychic_6"  ] = 15611,
    [ "zat_psychic_7"  ] = 15612,
    [ "zat_psychic_8"  ] = 15613,
    [ "zat_psychic_9"  ] = 15614,
    [ "zat_psychic_10" ] = 15615,
    [ "zat_psychic_11" ] = 15616,
    [ "zat_psychic_12" ] = 15617,
    [ "zat_psychic_13" ] = 15618,
    [ "zat_fireball_3" ] = 15626,
    [ "zat_elecball_4" ] = 15627,
    [ "pri_acidball"   ] = 14293,
    [ "pri_fireball_1" ] = 14294,
    [ "pri_acidball_2" ] = 14295,
    [ "pri_elecball_3" ] = 14296,
    [ "jup_elecball"   ] = 2774,
  }
  for name, spawn_id in pairs( anoms ) do
    local sobj = alife():object( name )
    if not sobj then
      log2( "[%s]: %s not found, creating %s", script_name(), name, spawn_id )
      alife():create( spawn_id )
    end
  end
end


function fix_door_hospital_01_l_0003( ver )
  local names = {
    "door_hospital_01_r_0003",
    "door_hospital_01_l_0003",
  }
  for _, n in ipairs( names ) do
    local sobj = alife():object( n )
    if sobj then
      log2( "[%s]: found %s, removing...", script_name(), sobj:name() )
      alife():release( sobj )
    end
  end
end


function fix_mil_physic_object_0001( ver )
  local sobj = alife():object( "mil_physic_object_0001" )
  if sobj then
    log2( "[%s]: found %s, removing...", script_name(), sobj:name() )
    alife():release( sobj )
  end
end


function fix_dragunov_ohota( ver )
  if ver == 0 then return end
  news_manager.skip_send_task = true
  if
    db.actor:has_info( "dragunov_ohota_start" )
    and not db.actor:has_info( "tm_find_info_done" )
  then
    log2( "[%s]: completing 'dragunov_ohota' task", script_name() )
    for i = 0, 2 do
      level_tasks.set_task_state( task.completed, "dragunov_ohota", i )
    end
  end
  if
    db.actor:has_info( "koloda_kuznec_start" )
    and not db.actor:has_info( "koloda_kuznec_done" )
  then
    log2( "[%s]: completing 'koloda_kuznec' task", script_name() )
    for i = 0, 3 do
      level_tasks.set_task_state( task.completed, "koloda_kuznec", i )
    end
  end
  if
    db.actor:has_info( "hamster_kuznec8_start" )
    and not db.actor:has_info( "taynik10_kuznec" )
  then
    log2( "[%s]: completing 'hamster_kuznec8' task", script_name() )
    for i = 0, 2 do
      level_tasks.set_task_state( task.completed, "hamster_kuznec8", i )
    end
  end
  dsh.timeout( 0, function()
    news_manager.skip_send_task = false
  end )
end


function fix_l10u_bunker_codedoor_key_0000( ver ) end
function fix_l10u_bunker_codedoor_key_0000_2( ver )
  for i = 1, 65534 do
    local sobj = alife():object( i )
    if
      sobj and sobj:name() == "codedoor_key_0000"
      and object_level_name( sobj ) == "l10u_bunker"
    then
      log2(
        "[%s]: found %s on %s, rewrite custom data",
        script_name(), sobj:name(), object_level_name( sobj )
      )
      alife():release( sobj )
      sobj = alife():create( 10000 )
      local pk = get_netpk( sobj, 1 )
      ASSERT(
        pk:isOk(), "[%s]: can't parse netpk: %s",
        script_name(), sobj:name()
      )
      local data = pk:get()
      data.custom_data:setString(
        "[collide]\nignore_static\n\n[logic]\ncfg = dsh\\logic\\l10u_bunker\\codedoor_key_0000.ltx\n"
      )
      pk:set( data )
      break
    end
  end
end


function fix_buusty_kvest_task( ver )
  if ver == 0 then return end
  news_manager.skip_send_task = true
  if
    db.actor:has_info( "buusty_kvest_start" )
    and not db.actor:has_info( "buusty_kvest_done" )
  then
    log2( "[%s]: completing 'buusty_kvest_task' task", script_name() )
    for i = 0, 2 do
      level_tasks.set_task_state( task.completed, "buusty_kvest_task", i )
    end
    db.actor:disable_info_portion( "buusty_kvest_have" )
  end
  dsh.timeout( 0, function()
    news_manager.skip_send_task = false
  end )
end


function fix_strelok_taynik_pda0( ver )
  if ver == 0 then return end
  news_manager.skip_send_task = true
  if
    db.actor:has_info( "strelok_taynik_pda0_start" )
    and not db.actor:has_info( "strelok_taynik_pda0_done" )
  then
    log2( "[%s]: completing 'strelok_taynik_pda0' task", script_name() )
    for i = 0, 1 do
      level_tasks.set_task_state( task.completed, "strelok_taynik_pda0", i )
    end
    db.actor:disable_info_portion( "strelok_taynik_pda0_start" )
  end
  dsh.timeout( 0, function()
    news_manager.skip_send_task = false
  end )
end


function fix_esc_dinamit_panera( ver )
  local sobj = alife():story_object( story_ids.esc_dinamit_panera )
  if sobj then
    log2( "[%s]: found %s, removing...", script_name(), sobj:name() )
    alife():release( sobj )
  end
end


function fix_hamster_kuznec6( ver )
  if ver == 0 then return end
  news_manager.skip_send_task = true
  if
    db.actor:has_info( "hamster_kuznec6_start" )
    and not db.actor:has_info( "taynik6_kuznec" )
  then
    log2( "[%s]: completing 'hamster_kuznec6' task", script_name() )
    for i = 0, 2 do
      level_tasks.set_task_state( task.completed, "hamster_kuznec6", i )
    end
  end
  dsh.timeout( 0, function()
    news_manager.skip_send_task = false
  end )
end


function fix_handmade_arts_cnt( ver )
  if ver == 0 then return end
  local value = db.actor:has_info( "acv_art" )
    and 100 or amk.load_variable( "acv_art", 0 )
  log2( "[%s]: initializing dsh.handmade_arts_cnt = %s", script_name(), value )
  dsh.handmade_arts_cnt( value )
end


function make_free_prizrak( ver )
  if ver == 0 then return end
  if db.actor:has_info( "posulku_poluchil" ) then
    log2( "[%s]: call dsh.make_free_prizrak()", script_name() )
    dsh.make_free_prizrak()
  end
end


function fix_land_arhara_biliyrd( ver )
  for _, name in ipairs({
    "land_arhara_biliyrd", "land_arhara_zimov_pulemet"
  }) do
    local sobj = alife():object( name )
    if sobj then
      log2( "[%s]: found %s, removing...", script_name(), sobj:name() )
      alife():release( sobj )
    end
  end
end


function fix_se_respawn( ver )
  se_respawn.startup_respawners()
end


function fix_stalker_kisluy( ver )
  if ver == 0 then return end
  if db.actor:has_info( "spawn_strelochniki" ) then
    arhara_dialog.del_stalker_kisluy()
  end
end


function fix_trade_dialog_maks( ver )
  if ver == 0 then return end
  local tname1 = "dsh.has_trade_dialog.maks"
  local tname2 = "dsh.hasnt_trade_dialog.maks"
  for _, t in ipairs({ tname1, tname2 }) do
    if ogse_st_mgr.timer_exists( t ) then
      ogse_st_mgr.get_timer( t ):stop()
      log2( "[%s]: stop timer %s", script_name(), t )
    end
  end
  ogse.delete_var( tname1 .. ".cnt" )
  db.actor:disable_info_portion( "price_maks" )
end


function fix_esc_surprise_box_015( ver )
  dsh.del_2soldier_outfits()
end


function fix_dsh_rukzak_storage( ver )
  if ver == 0 then return end
  for _, k in ipairs( ogse_unist.get_all_names() ) do
    local id = string.match( k, "^dsh_rukzak%.([^.]+)%.sections$" )
    if id then
      id = tonumber( id )
      local items = dsh_rukzak.load_rukzak( id )
      log2(
        "[%s]: change storage type of dsh_rukzak: %s",
        script_name(), id
      )
      dsh_rukzak.save_rukzak( id, items )
    end
  end
end


function fix_pseudodog_forest()
  local sobj = alife():object( "pseudodog_forest" )
  if sobj then
    log2( "[%s]: move %s", script_name(), sobj:name() )
    alife():teleport_object(
      "",
      vector():set( -3.7275488376617,-1.1764014959335,-303.84091186523 ),
      65240, 3274,
      sobj.id
    )
  end
end


function fix_dsh_ogse_relations( ver )
  if ver == 0 then return end
  log2( "[%s]: clear dsh_ogse_relations", script_name() )
  ogse.delete_var( "dsh_ogse_relations"         )
  ogse.delete_var( "dsh_ogse_relations.chunks"  )
  ogse.delete_var( "dsh_ogse_relations.records" )
end


function fix_dsh_deadmans_table_proxy( ver )
  if ver == 0 then return end
  log2( "[%s]: clear ogse.deadmans_table", script_name() )
  ogse.delete_var( "ogse.deadmans_table" )
end

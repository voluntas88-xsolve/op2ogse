-- -*- mode: lua; coding: windows-1251-dos -*-

local total_debug = false -- ogse_debug.verbose_debug


function write_log( str )
  if total_debug then log1( str ) end
end


-- ћентальное состо€ние тела
-- мы уже находимс€ в необходимом состо€нии?
class "eva_state_mgr_mental" ( property_evaluator )
function eva_state_mgr_mental:__init( name, st ) super( nil, name )
  self.st = st
end


function eva_state_mgr_mental:evaluate()
  write_log( "~~STATEMGR_mental_eva_1" )
  return state_lib.states[ self.st.target_state ].mental == nil
    or state_lib.states[ self.st.target_state ].mental == self.object:target_mental_state()
end


-- нужно ли нам быть в состо€нии FREE
class "eva_state_mgr_mental_free" ( property_evaluator )
function eva_state_mgr_mental_free:__init( name, st ) super( nil, name )
  self.st = st
end


function eva_state_mgr_mental_free:evaluate()
  write_log( "~~STATEMGR_mental_eva_2" )
  return state_lib.states[ self.st.target_state ].mental == anim.free
end


-- находимс€ ли мы сейчас во FREE
class "eva_state_mgr_mental_free_now" ( property_evaluator )
function eva_state_mgr_mental_free_now:__init( name, st ) super( nil, name )
  self.st = st
end


function eva_state_mgr_mental_free_now:evaluate()
  write_log( "~~STATEMGR_mental_eva_3" )
  return self.object:target_mental_state() == anim.free
end


-- нужно ли нам быть в состо€нии DANGER
class "eva_state_mgr_mental_danger" ( property_evaluator )
function eva_state_mgr_mental_danger:__init( name, st ) super( nil, name )
  self.st = st
end


function eva_state_mgr_mental_danger:evaluate()
  write_log( "~~STATEMGR_mental_eva_4" )
  return state_lib.states[ self.st.target_state ].mental == anim.danger
end


--' находимс€ ли мы сейчас в
class "eva_state_mgr_mental_danger_now" ( property_evaluator )
function eva_state_mgr_mental_danger_now:__init( name, st ) super( nil, name )
  self.st = st
end


function eva_state_mgr_mental_danger_now:evaluate()
  write_log( "~~STATEMGR_mental_eva_5" )
  return self.object:target_mental_state() == anim.danger
end


-- нужно ли нам быть в состо€нии PANIC
class "eva_state_mgr_mental_panic" ( property_evaluator )
function eva_state_mgr_mental_panic:__init( name, st ) super( nil, name )
  self.st = st
end


function eva_state_mgr_mental_panic:evaluate()
  write_log( "~~STATEMGR_mental_eva_6" )
  return state_lib.states[ self.st.target_state ].mental == anim.panic
end


-- находимс€ ли мы сейчас в PANIC
class "eva_state_mgr_mental_panic_now" ( property_evaluator )
function eva_state_mgr_mental_panic_now:__init( name, st ) super( nil, name )
  self.st = st
end


function eva_state_mgr_mental_panic_now:evaluate()
  write_log( "~~STATEMGR_mental_eva_7" )
  return self.object:target_mental_state() == anim.panic
end


-- ¬ключаем свободное состо€ние
class "act_state_mgr_mental_free" ( action_base )
function act_state_mgr_mental_free:__init( name ) super( nil, name )
end


function act_state_mgr_mental_free:initialize()
  action_base.initialize( self )
  write_log( "~~STATEMGR_mental_1" )
  self.object:set_mental_state( anim.free )
  write_log( "~~STATEMGR_mental_1_end" )
end


function act_state_mgr_mental_free:execute()
  action_base.execute( self )
  write_log( "~~STATEMGR_mental_2" )
  self.object:set_mental_state( anim.free )
  write_log( "~~STATEMGR_mental_2_end" )
end


function act_state_mgr_mental_free:finalize()
  action_base.finalize( self )
end


-- ¬ключаем возбужденное состо€ние
class "act_state_mgr_mental_danger" ( action_base )
function act_state_mgr_mental_danger:__init( name ) super( nil, name )
end


function act_state_mgr_mental_danger:initialize()
  action_base.initialize( self )
  write_log( "~~STATEMGR_mental_3" )
  self.object:set_mental_state( anim.danger )
  write_log( "~~STATEMGR_mental_3_end" )
end


function act_state_mgr_mental_danger:execute()
  action_base.execute( self )
  write_log( "~~STATEMGR_mental_4" )
  self.object:set_mental_state( anim.danger )
  write_log( "~~STATEMGR_mental_4_end" )
end


function act_state_mgr_mental_danger:finalize()
  action_base.finalize( self )
end


-- ¬ключаем паническое состо€ние
class "act_state_mgr_mental_panic" ( action_base )
function act_state_mgr_mental_panic:__init( name ) super( nil, name )
end


function act_state_mgr_mental_panic:initialize()
  action_base.initialize( self )
  write_log( "~~STATEMGR_mental_5" )
  self.object:set_mental_state( anim.panic )
  write_log( "~~STATEMGR_mental_5_end" )
end


function act_state_mgr_mental_panic:execute()
  action_base.execute( self )
  write_log( "~~STATEMGR_mental_6" )
  self.object:set_mental_state( anim.panic )
  write_log( "~~STATEMGR_mental_6_end" )
end


function act_state_mgr_mental_panic:finalize()
  action_base.finalize( self )
end

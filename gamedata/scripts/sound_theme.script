-- -*- mode: lua; coding: windows-1251-dos -*-
--------------------------------------------------------------------------------
--      Схема озвучки
--      автор:  Диденко Руслан  (Stohe)
--      update: Чугай Александр (Chugai)
--------------------------------------------------------------------------------

actor_theme   = sound_theme_data.actor_theme
ph_snd_themes = sound_theme_data.ph_snd_themes
theme         = sound_theme_data.theme


function attach( sm )
  sm:subscribe({ signal = "on_npc_before_spawn", fun = this.on_npc_spawn })
  sm:subscribe({ signal = "on_spawn",            fun = this.on_spawn     })
end


function on_spawn()
  preload_themes( theme )
end


function on_npc_spawn( obj )
  load_sound( obj )             -- загрузка озвучки
end


function preload_themes( t )
  for k, v in pairs( t ) do
    if v.types then
      preload_themes( v.types )
    else
      preload_theme_sect( k )
    end
  end
end


local preloaded = {}

function preload_theme_sect( name )
  for _, sf in ipairs({ "_rnd", "_seq", "_single" }) do
    local theme_name = name .. sf
    ASSERT( not preloaded[ theme_name ], "%s already preloaded", theme_name )
    local real_sect  = "script_sound." .. theme_name
    if sys_ini:section_exist( real_sect ) then
      preloaded[ theme_name ] = {}
      local t = get_section_keys_and_values( real_sect )
      for k, v in pairs( t ) do
        local flag, path = unpack( parse_names( v ) )
        ASSERT( path, "wrong path in %s: %s, flag = %s", real_sect, tostring( v ), tostring( flag ) )
        if flag == "0" then
          flag = true
        else
          flag = false
        end
        preloaded[ theme_name ][ k ] = { path, flag }
      end
    end
  end
end


function select_sound_from_ltx( obj, section )
  for _, k in ipairs(
    {
      tostring( obj:story_id() ), obj:profile_name(), obj:character_community(),
      "stalker"
    }
  ) do
    local t = preloaded[ section ][ k ]
    if t then return unpack( t ) end
  end
end


-- загрузка звуков на основе данных ltx
local default_prefix = "characters_voice\\"

function load_sound_from_ltx( obj, name, tbl )
  tbl.max_ids[ obj:id() ] = {}
  local n = name .. "_rnd"
  if preloaded[ n ] then
    local path, use_def = select_sound_from_ltx( obj, n )
    if path then
      local t = {
        [ "path" ] = path,
      }
      if use_def then
        t.prefix = default_prefix
      end
      tbl.max_ids[ obj:id() ].rnd_load = t
    end
  end
  n = name .. "_seq"
  if preloaded[ n ] then
    local path, use_def = select_sound_from_ltx( obj, n )
    if path then
      local t = {
        [ "path" ] = path,
      }
      if use_def then
        t.prefix = default_prefix
      end
      tbl.max_ids[ obj:id() ].into_cycled = true
      tbl.max_ids[ obj:id() ].into_load   = t
    end
  end
  n = name .. "_single"
  if preloaded[ n ] then
    local path, use_def = select_sound_from_ltx( obj, n )
    if path then
      local t = {
        [ "path" ] = path,
      }
      if use_def then
        t.prefix = default_prefix
      end
      tbl.max_ids[ obj:id() ].into_cycled = false
      tbl.max_ids[ obj:id() ].into_load   = t
    end
  end
end


function load_theme_sound( npc, tbl )
  for k, v in pairs( tbl ) do
    if v.types == nil then
      load_sound_from_ltx( npc, k, v )
    else
      load_theme_sound( npc, v.types )
    end
  end
end


function load_sound( obj )
  load_theme_sound( obj, theme )
  -- делаем заготовку в db.sound
  db.sound[ obj:id() ] = {}
end

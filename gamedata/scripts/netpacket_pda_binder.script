-- -*- mode: lua; coding: windows-1251-dos -*-
-- original idea by Monnoroch
-- base script by Malandrinus
-- scripting by Shadowman

function attach( sm )
  sm:subscribe({ signal = "on_mm_return_game", fun = this.on_mm_return_game })
end


function init( obj )
  local new_binder = my_binder( obj )
  obj:bind_object( new_binder )
end


class "my_binder" ( object_binder )
function my_binder:__init( obj ) super( obj )
end


function my_binder:reload (section )
  object_binder.reload( self, section )
end


function my_binder:reinit()
  object_binder.reinit( self )
  db.storage[ self.object:id() ] = {}
  self.object:set_callback( callback.use_object, self.use_callback, self )
end


function my_binder:net_spawn( data )
  db.add_obj( self.object )
  gps_habar.on_game_load()      --idler++--
  sak.out_teleport()
  sak_off_corpses.off_corpses() --Уборщик теперь здесь
  apply_game_options()
  meceniy_work.prepare_for_work()
  return object_binder.net_spawn( self, data )
end


function my_binder:net_destroy()
  object_binder.net_destroy( self )
end


function my_binder:save( packet )
  object_binder.save( self, packet )
  xr_logic.save_obj( self.object, packet )
end


function my_binder:load( reader )
  object_binder.load( self, reader )
  xr_logic.load_obj( self.object, reader )
end


function apply_game_options()
  if level.get_game_difficulty() > 0 then
    cmd( "hud_info off" )
    cmd( "hud_crosshair_dist off" )
    cmd( "hud_crosshair off" )
  end
end


function on_mm_return_game()
  apply_game_options()
end

-- -*- mode: lua; coding: windows-1251-dos -*-
-----------------------------------------------------------------------
--- ui_ogse_quicklaunch.script
--- Панель быстрых действий OGSE
--- KamikaZze, Dusty79 (c) OGS Evolution Team
--- version 1.7 (13/03/2011)
-----------------------------------------------------------------------

function attach( sm )
  sm:subscribe({ signal = "on_key_down",       fun = this.chek_keys         })
  sm:subscribe({ signal = "on_mm_return_game", fun = this.on_mm_return_game })
  sm:subscribe({ signal = "on_spawn",          fun = this.on_spawn          })
end


function on_spawn()
  rebind_keys()
end


local dik_use_antirad, dik_quicksave

function rebind_keys()
  dik_use_antirad, dik_quicksave = {}, {}
  local data = dsh_cfg.get_data()
  for _, kn in ipairs( parse_names( data.cam_3 ) ) do
    local dik = ogse_rebind_key.keyname_to_dik( kn )
    ASSERT( dik, "keyname to dik not found: %s", kn )
    dik_use_antirad[ dik ] = true
  end
  cmd( "unbind cam_3" )
  cmd( "unbind_sec cam_3" )
  for _, kn in ipairs( parse_names( data.buy_menu ) ) do
    local dik = ogse_rebind_key.keyname_to_dik( kn )
    ASSERT( dik, "keyname to dik not found: %s", kn )
    dik_quicksave[ dik ] = true
  end
  cmd( "unbind buy_menu" )
  cmd( "unbind_sec buy_menu" )
end


function on_mm_return_game()
  rebind_keys()
end


local strings = {}

local strings_all = {

	[1] = {text = "Быстрые клавиши:"},
	[2] = {text = "----------------------------"},
	[3] = {text = "Использовать бинт", keybind = 73},
	[4] = {text = "Использовать аптечку", keybind = 74},
	[5] = {text = "Принять антирад", variable = "antirad_key"},
	[6] = {text = "Выпить энергетик", variable = "energy_drink_key"},
	[7] = {text = "Принять Б-190", variable = "yod_key"},
	[8] = {text = "Принять Бипсизон", variable = "bipsizon_key"}
	
}
local strings_btr = {

	[1] = {text = "Управление БТР:"},
	[2] = {text = "----------------------------"},
	[3] = {text = "Открыть огонь", keybind = key_bindings.kWPN_FIRE},
	[4] = {text = "Ручной режим", keybind = key_bindings.kWPN_1},
	[5] = {text = "Полуавтомат (автоматическое наведение, огонь вручную)", keybind = key_bindings.kWPN_2},
	[6] = {text = "Автомат (полностью автоматическое ведение огня)", keybind = key_bindings.kWPN_3},
	[7] = {text = "Непосредственное указание цели", keybind = key_bindings.kWPN_ZOOM},
	[8] = {text = "Переключиться на другую цель", keybind = key_bindings.kR_LOOKOUT},
	[9] = {text = "Система Свой/Чужой", keybind = key_bindings.kL_LOOKOUT}
}

--[[
if ogse_car_control.need_companion_btr == true then
	strings_btr[6] = {text = "Огнем управляет стрелок (необходим напарник на борту)", keybind = key_bindings.kWPN_3}
end
]]

local tab = 0

function check_quicklaunch_hint()
    local hud = get_hud()
    if hud:GetCustomStatic("main_task") then
        if tab==0 then
			if ogse_car_control.in_btr == true then
				strings = strings_btr
			else
				strings = strings_all
			end
			local i = 1
			while strings[i] do
				local string_id = "quicklaunch_hint_"..tostring(i)
				local quicklaunch = hud:GetCustomStatic(string_id)
				if not quicklaunch then
					hud:AddCustomStatic(string_id, true)
					quicklaunch = hud:GetCustomStatic(string_id):wnd()
					local key_name = ""
					if strings[i].variable ~= nil then
						key_name = ogse_rebind_key.dik_to_name(ogse_rebind_key.get_key_preset_value(strings[i].variable)) .. " = "
					end
					if strings[i].keybind ~= nil then
						key_name = ogse_rebind_key.dik_to_name(bind_to_dik(strings[i].keybind)) .. " = "
					end
					local string_text = tostring(key_name..strings[i].text)
					quicklaunch:SetText(string_text)
				end
				i = i + 1
			end
			tab = 1
        end
    else
        if tab==1 then
			local i = 1
			while strings[i] do
				local string_id = "quicklaunch_hint_"..tostring(i)
				local quicklaunch = hud:GetCustomStatic(string_id)
				if quicklaunch then
					hud:RemoveCustomStatic(string_id)
				end
				i = i + 1
			end
			tab = 0
        end
    end
end


function chek_keys( key, bind )
  if level.main_input_receiver() then return end
  if dik_use_antirad [ key ] then
    local items = { "antirad" }
    for _, v in ipairs( items ) do
      local item = db.actor:object( v )
      if item then
        dsh_medkit.on_actor_before_use( item )
        db.actor:eat( item )
        ogse_screen_msg.show_message_use_item( item:section() )
        return
      end
    end
    return
  end
  if dik_quicksave[ key ] then
    if dsh.allowed_to_save() then
      cmd( "ogse_quick_save" )
      dsh.backup_quicksave()
    end
    return true
  end
end

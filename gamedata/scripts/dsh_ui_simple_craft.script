-- -*- mode: lua; coding: windows-1251-dos -*-

class "select_craft_items" ( CUIListItemEx )
function select_craft_items:__init()
  super()
  self.item_name = "itemname"
  self:SetWndRect( 0, 0, 320, 22 )
  local ca = 255
  local cr = 216
  local cg = 186
  local cb = 140

  self.itmnum = CUIStatic()
  self.itmnum:SetAutoDelete( true )
  self:AttachChild( self.itmnum )
  self.itmnum:SetWndRect( 0, 0, 10, 22 )
  self.itmnum:SetText( "itemnum" )
  self.itmnum:SetFont( GetFontLetterica16Russian() )
  self.itmnum:SetTextColor( ca, cr, cg, cb )

  self.itmn   = CUIStatic()
  self.itmn:SetAutoDelete( true )
  self:AttachChild( self.itmn )
  self.itmn:SetWndRect( 12, 0, 150, 22 )
  self.itmn:SetText( "itemname" )
  self.itmn:SetFont( GetFontLetterica18Russian() )
  self.itmn:SetTextColor( ca, cr, cg, cb )

  self.itmage = CUIStatic()
  self.itmage:SetAutoDelete( true )
  self:AttachChild( self.itmage )
  self.itmage:SetWndRect( 250, 0, 40, 22 )
  self.itmage:SetText( "itemage" )
  self.itmage:SetFont( GetFontLetterica16Russian() )
  self.itmage:SetTextColor( ca, cr, cg, cb )
end


class "ui_simple_craft" ( CUIScriptWnd )
function ui_simple_craft:__init( owner, xml, item )
  super()
  self.dlg        = self
  self.item       = item
  self.list_items = {}
  self.need_close = false
  self.owner      = owner
  self.xml_fname  = xml
  self:InitControls()
  self:InitCallBacks()
  self:FillList()
  local item_name = game.translate_string(
    sys_ini:r_string( self.item:section(), "inv_name_short" )
  )
  self:DrawConditionBar( self.item, 100, 130 )
  self:DrawCurItemName( item_name, 100, 45 )
  self:DrawCurItem( self.item, 100, 90 )
  self:DrawShansBar( self.item, 200, 100 )
end
function ui_simple_craft:__finalize() end


function ui_simple_craft:InitControls()
  self:Init( 50, 50, 550, 450 )
  local xml = CScriptXmlInit()
  xml:ParseFile( self.xml_fname )
  xml:InitStatic( "back_video",      self )
  xml:InitStatic( "background",      self )
  xml:InitStatic( "item_frame1",     self )
  xml:InitStatic( "bar_frame1",      self )
  xml:InitStatic( "item_frame2",     self )
  xml:InitStatic( "bar_frame2",      self )
  xml:InitStatic( "shans_bar_frame", self )
  xml:InitFrame( "list_frame",       self )

  local ctrl = xml:InitList( "list", self )
  ctrl:ShowSelectedItem( true )
  self:Register( ctrl, "list_window" )

  self:Register( xml:Init3tButton( "window_name", self ), "window_name" )
  self:Register( xml:Init3tButton( "caption1", self ), "caption1" )
  self:Register( xml:Init3tButton( "caption2", self ), "caption2" )
  self:Register( xml:Init3tButton( "caption3", self ), "caption3" )
  self:Register( xml:Init3tButton( "caption4", self ), "caption4" )
  self.btn_4 = xml:Init3tButton( "btn_4", self )
  self:Register( self.btn_4, "btn_4" )
  self.btn_4:Enable( false )
  self:Register( xml:Init3tButton( "btn_quit", self ), "btn_quit" )

  self.message_box = CUIMessageBoxEx()
  self:Register( self.message_box, "message_box" )
end


function ui_simple_craft:InitCallBacks()
  self:AddCallback( "btn_4",    ui_events.BUTTON_CLICKED, self.rep_btn, self )
  self:AddCallback( "btn_quit", ui_events.BUTTON_CLICKED, self.on_quit, self )
  self:AddCallback(
    "list_window", ui_events.LIST_ITEM_CLICKED, self.OnListItemClicked, self
  )
  self:AddCallback(
    "list_window", ui_events.WINDOW_LBUTTON_DB_CLICK, self.OnListItemDbClicked,
    self
  )
  self:AddCallback(
    "message_box", ui_events.MESSAGE_BOX_OK_CLICKED, self.OnMsgYes, self
  )
end


function ui_simple_craft:rep_btn()
  local list = self:GetListWnd( "list_window" )
  if list:GetSize() == 0 then
    self.msgbox_id = 1
    self.message_box:Init( "message_box_out_of_item" )
    self:GetHolder():start_stop_menu( self.message_box, true )
    return
  end
  local index = list:GetSelectedItem()
  if index == -1 then
    self.msgbox_id = 1
    self.message_box:Init( "message_box_select_item" )
    self:GetHolder():start_stop_menu( self.message_box, true )
    return
  end

  local item = list:GetItem( index )
  local destr_item_index = tonumber( item.itmnum:GetText() )
  local destr_item = self.list_items[ destr_item_index ]
  self:do_craft( destr_item )
end


function ui_simple_craft:do_craft( item )
  self:message_box_success()
end


function ui_simple_craft:message_box_success()
  self.msgbox_id  = 1
  self.need_close = true
  self.message_box:Init( "message_box_repair_success" )
  self:GetHolder():start_stop_menu( self.message_box, true )
end


function ui_simple_craft:on_quit()
  self:GetHolder():start_stop_menu( self, true )
  self.dlg = nil
end


function ui_simple_craft:OnMsgYes()
  if self.msgbox_id == 1 then
    if self.need_close then
      self.need_close = false
      self:on_quit()
    end
  end
  self.msgbox_id = 0
end


function ui_simple_craft:OnListItemClicked()
  local list_box = self:GetListWnd( "list_window" )
  if list_box:GetSize() == 0 then return end
  local itm_index = list_box:GetSelectedItem()
  local item      = list_box:GetItem( itm_index )
  if not item then return end
  self.btn_4:Enable( true )
  local destr_item_name = item.itmn:GetText()
  local destr_item_index = tonumber( item.itmnum:GetText() )
  local destr_item_st = self.list_items[ destr_item_index ]
  self:DrawConditionRemBar( destr_item_st, 300, 130 )
  self:DrawCurRemItemName( destr_item_name, 300, 45 )
  self:DrawCurRemItem( destr_item_st, 300, 90 )
  self:DrawShansBar( self.item, 200, 100, destr_item_st )
end


function ui_simple_craft:OnListItemDbClicked()
  self:rep_btn()
end


function ui_simple_craft:FillList()
  local j = 1
  for i = 0, db.actor:object_count() - 1 do
    local item_from_inv = db.actor:object( i )
    if self:can_include_into_list( item_from_inv ) then
      table.insert( self.list_items, item_from_inv )
      local _item_num  = "" .. j .. ""
      local _item_name = sys_ini:r_string(
        item_from_inv:section(), "inv_name_short"
      )
      if not _item_name then
        _item_name = sys_ini:r_string( item_from_inv:section(), "inv_name" )
      end
      _item_name = game.translate_string( _item_name )
      local len_point = 29
      if string.len( _item_name ) > len_point then
        _item_name = string.sub( _item_name, 1, len_point )
        _item_name = _item_name .. "..."
      end
      local _item_cond = item_from_inv:condition() * 100
      if _item_cond ~= 100 then
        _item_cond = string.format( "%.1f", _item_cond )
      end
      _item_cond = "[" .. _item_cond .. "%]"
      self:AddItemToList( _item_num, _item_name, _item_cond )
      j = j + 1
    end
  end
end


function ui_simple_craft:can_include_into_list( item )
  return false
end


function ui_simple_craft:AddItemToList( item_num, item_name, item_cond )
  local _itm = select_craft_items()
  _itm.itmnum:SetText( item_num )
  _itm.itmn:SetText( item_name )
  _itm.itmage:SetText( item_cond )
  local list_box = self:GetListWnd( "list_window" )
  list_box:AddItem( _itm )
end


function ui_simple_craft:DrawConditionRemBar( de_item, x, y )
  if not x then x = 0 end
  if not y then y = 0 end
  local cond_rem_bar_width = 0
  if de_item then
    cond_rem_bar_width = ( math.floor( de_item:condition() * 100 ) * 1.1 )
    x = x - 55
    local c = self.cond_rem_bar
    if not c then
      self.cond_rem_bar = CUIStatic()
      c = self.cond_rem_bar
      c:SetWindowName( "cond_rem_bar" )
      c:SetAutoDelete( true )
      c:InitTexture( "ui\\ui_ogse_hud" )
      c:SetOriginalRect( 347, 207, 110, 10 )   
      c:SetStretchTexture( true )
      self:AttachChild(c) 
    end
    if     cond_rem_bar_width >  109 then cond_rem_bar_width = 109
    elseif cond_rem_bar_width <=   0 then cond_rem_bar_width =   1 end
    c:SetOriginalRect( 346 + cond_rem_bar_width, 207, 1, 10 )   
    c:Init( x, y, cond_rem_bar_width, 10 )
  else
    c:Init( 0, 0, 0, 0 )
  end
end


function ui_simple_craft:DrawCurRemItemName( de_item, x, y )
  if not x then x = 0 end
  if not y then y = 0 end
  local w = self.item_name_rem
  if not w then
    self.item_name_rem = CUI3tButton()
    w = self.item_name_rem
    w:SetWindowName( "item_name_rem" )
    w:SetAutoDelete( true )
    self:AttachChild( w ) 
  end
  if de_item then
    w:SetFont( GetFontLetterica16Russian() )
    w:SetTextColor( 95, 255, 255, 255 )
    local len_point = 25
    if string.len( de_item ) > len_point then
      de_item = string.sub( de_item, 1, len_point )
      de_item = de_item .. "..."
    end		
    w:SetText( de_item )
    w:Init( x - 100, y, 200, 10 )
  else
    w:SetText( "" )
    w:Init( 0, 0, 0, 0 )
  end
end


function ui_simple_craft:DrawCurRemItem( de_item, x, y )
  if not x then x = 0 end
  if not y then y = 0 end
  if de_item == nil or alife():object( de_item:id() ) == nil then return end
  local di_section = de_item:section()

  local a = self.cur_rem_textur
  if not a then
    self.cur_rem_textur = CUIStatic()
    a = self.cur_rem_textur
    a:SetWindowName( "cur_rem_textur" )
    a:SetAutoDelete( true )  
    a:InitTexture( "ui\\ui_icon_equipment" )
    a:SetStretchTexture( true )
    self:AttachChild( a )
  end
  if de_item then
    tx = sys_ini:r_u32( di_section, "inv_grid_x"      ) * 50
    ty = sys_ini:r_u32( di_section, "inv_grid_y"      ) * 50
    tw = sys_ini:r_u32( di_section, "inv_grid_width"  ) * 50
    th = sys_ini:r_u32( di_section, "inv_grid_height" ) * 50
    x = x - ( tw / 4 )
    y = y - ( th / 4 )
    a:SetOriginalRect( tx, ty, tw, th )
    a:Init( x, y, tw / 2, th / 2 )
  else
    a:Init( 0, 0, 0, 0 )
  end	
end


function ui_simple_craft:DrawShansBar( item, x, y, destr_item )
  if not x then x = 0 end
  if not y then y = 0 end
  local s = self.shans_bar
  if not s then
    self.shans_bar = CUIStatic()
    s = self.shans_bar
    s:SetWindowName( "shans_bar" )
    s:SetAutoDelete( true )
    s:InitTexture( "ui\\ui_ogse_hud" )
    s:SetOriginalRect( 565, 110, 10, 100 )   
    s:SetStretchTexture( true )
    self:AttachChild( s ) 
  end
  if item and destr_item then
    local bar_height = self:calc_shans_bar_height( item, destr_item )
    if     bar_height <=   0 then bar_height = 1
    elseif bar_height >  100 then bar_height = 100 end
    s:SetOriginalRect( 565, 210 - bar_height, 10, 1 )   
    x = x - 5
    y = y + ( 50 - bar_height )
    s:Init( x, y, 10, bar_height )
  end
end


function ui_simple_craft:calc_shans_bar_height( item, destr_item )
  return 100
end


function ui_simple_craft:DrawConditionBar( item, x, y )
  if not x then x = 0 end
  if not y then y = 0 end
  local cond_bar_width = 0
  if item then
    cond_bar_width = ( math.floor( item:condition() * 100 ) * 1.1 )
    x = x - 55
    local c=self.cond_bar
    if not c then
      self.cond_bar = CUIStatic()
      c = self.cond_bar
      c:SetWindowName( "cond_bar" )
      c:SetAutoDelete( true )
      c:InitTexture( "ui\\ui_ogse_hud" )
      c:SetOriginalRect( 347, 207, 110, 10 )   
      c:SetStretchTexture( true )
      self:AttachChild(c) 
    end
    if     cond_bar_width >  109 then cond_bar_width = 109
    elseif cond_bar_width <=   0 then cond_bar_width =   1 end
    c:SetOriginalRect( 346 + cond_bar_width, 207, 1, 10 )   
    c:Init( x, y, cond_bar_width, 10 )
  else
    c:Init( 0, 0, 0, 0 )
  end
end


function ui_simple_craft:DrawCurItemName( item, x, y )
  if not x then x = 0 end
  if not y then y = 0 end
  local w = self.item_name
  if not w then
    self.item_name = CUI3tButton()
    w = self.item_name
    w:SetWindowName( "item_name" )
    w:SetAutoDelete( true )
    self:AttachChild( w )
  end
  if item then
    w:SetFont( GetFontLetterica16Russian() )
    w:SetTextColor( 95, 255, 255, 255 )
    local len_point = 25
    if string.len( item ) > len_point then
      item = string.sub( item, 1, len_point )
      item = item .. "..."
    end	
    w:SetText( item )
    w:Init( x - 100, y, 200, 10 )
  else
    w:SetText( "" )
    w:Init( 0, 0, 0, 0 )
  end
end


function ui_simple_craft:DrawCurItem( item, x, y )
  if not x then x = 0 end
  if not y then y = 0 end
  if item == nil or alife():object( item:id() ) == nil then return end
  local item_section = item:section()
  local a = self.cur_textur
  if not a then
    self.cur_textur = CUIStatic()
    a = self.cur_textur
    a:SetWindowName( "cur_textur" )
    a:SetAutoDelete( true )  
    a:InitTexture( "ui\\ui_icon_equipment" )
    a:SetStretchTexture( true )
    self:AttachChild( a )
  end
  if item then
    tx = sys_ini:r_u32( item_section, "inv_grid_x"      ) * 50
    ty = sys_ini:r_u32( item_section, "inv_grid_y"      ) * 50
    tw = sys_ini:r_u32( item_section, "inv_grid_width"  ) * 50
    th = sys_ini:r_u32( item_section, "inv_grid_height" ) * 50
    x = x - ( tw / 4 )
    y = y - ( th / 4 )
    a:SetOriginalRect( tx, ty, tw, th )
    a:Init( x , y, tw / 2, th / 2 )
  end
end

-- -*- mode: lua; coding: windows-1251-dos -*-

function attach(sm)
  sm:subscribe({ signal = "on_key_down", fun = this.on_key_down })
  sm:subscribe({ signal = "on_mm_return_game", fun = this.on_mm_return_game })
  sm:subscribe({ signal = "on_spawn",    fun = this.on_spawn    })
end


function on_spawn()
  rebind_keys()
end


local dik_use_reminds, dik_use_runner

function rebind_keys()
  dik_use_reminds, dik_use_runner = {}, {}
  local data = dsh_cfg.get_data()
  for _, kn in ipairs( parse_names( data.scores ) ) do
    local dik = ogse_rebind_key.keyname_to_dik( kn )
    ASSERT( dik, "keyname to dik not found: %s", kn )
    dik_use_reminds[ dik ] = true
  end
  cmd( "unbind scores" )
  cmd( "unbind_sec scores" )
  for _, kn in ipairs( parse_names( data.cam_4 ) ) do
    local dik = ogse_rebind_key.keyname_to_dik( kn )
    ASSERT( dik, "keyname to dik not found: %s", kn )
    dik_use_runner[ dik ] = true
  end
  cmd( "unbind cam_4" )
  cmd( "unbind_sec cam_4" )
end


function on_mm_return_game()
  rebind_keys()
end


function on_key_down( key, bind )
  if dik_use_reminds[ key ] then
    hotkeys.reminds()
    return true
  elseif dik_use_runner[ key ] then
    if not level.main_input_receiver() then hotkeys.runner() end
    return true
  end
end

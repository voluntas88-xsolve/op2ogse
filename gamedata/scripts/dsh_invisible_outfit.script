-- -*- mode: lua; coding: windows-1251-dos -*-

function attach( sm )
  sm:subscribe({ signal = "on_drop",         fun = this.remove_outfit })
  sm:subscribe({ signal = "on_item_to_ruck", fun = this.remove_outfit })
  sm:subscribe({ signal = "on_item_to_slot", fun = this.use_outfit    })
end


function use_outfit( obj )
  if obj:section() == "meceniy_outfit_new" then
    subscribe()
  end
end


function remove_outfit( obj )
  if obj:section() == "meceniy_outfit_new" then
    local outfit = db.actor:get_current_outfit()
    if outfit and outfit:section() == "meceniy_outfit_new" then
      return
    end
    unsubscribe()
    meceniy_work.set_invisible()
  end
end


local signals
function subscribe()
  if not signals then
    signals = {
      { signal = "on_monster_enemy_callback", fun = this.enemy_callback },
      { signal = "on_npc_enemy_callback",     fun = this.enemy_callback },
      { signal = "on_update",                 fun = this.on_update      },
    }
    local sm = ogse_signals.get_mgr()
    for _, s in ipairs( signals ) do
      sm:subscribe( s )
    end
  end
end

function unsubscribe()
  if signals then
    local sm = ogse_signals.get_mgr()
    for _, s in ipairs( signals ) do
      sm:unsubscribe( s )
    end
    signals = nil
  end
end


function enemy_callback( obj, enemy, result )
  local is_enemy = true
  local outfit   = db.actor:get_current_outfit()
  if
    outfit and outfit:section() == "meceniy_outfit_new"
    and not dsh_torch.is_torch_enabled()
  then
    is_enemy = false
  end
  if not is_enemy then
    table.insert( result, is_enemy )
    return true
  end
end


function on_update()
  ogse_signals.get_mgr():reschedule( 1000 )
  meceniy_work.set_invisible()
end

-- -*- mode: lua; coding: windows-1251-dos -*-

local expire_time = game.CTime()
expire_time:setHMSms( 0, 30, 0, 0 )


function attach(sm)
  sm:subscribe({ signal = "on_load", fun = this.on_load })
  sm:subscribe({ signal = "on_save", fun = this.on_save })
end


local deadmans_table = {}

function on_load()
  local t = ogse.load_var_safe( "dsh_deadmans.deadmans_table" )
  if not t then return end
  local expired_cnt, valid_cnt = 0, 0
  for _, item in ipairs( t ) do
    local victim_id, who_id, time = unpack( item )
    if
      time > game.get_game_time()
      and alife():object( victim_id )
      and alife():object( who_id    )
    then
      deadmans_table[ victim_id ] = {
        [ "time"   ] = time,
        [ "who_id" ] = who_id,
      }
      valid_cnt = valid_cnt + 1
    else
      expired_cnt = expired_cnt + 1
    end
  end
  log2(
    "[%s]: loaded: valid = %s, expired = %s",
    script_name(), valid_cnt, expired_cnt
  )
end


function on_save()
  local expired, valid = {}, {}
  for id, v in pairs( deadmans_table ) do
    if
      v.time > game.get_game_time()
      and alife():object( id       )
      and alife():object( v.who_id )
    then
      table.insert( valid, { id, v.who_id, v.time } )
    else
      table.insert( expired, id )
    end
  end
  for _, id in ipairs( expired ) do
    deadmans_table[ id ] = nil
  end
  if table.getn( valid ) > 0 then
    ogse.save_var(
      "dsh_deadmans.deadmans_table", valid, "array_template",
      { "u16", "u16", "time" }
    )
  else
    ogse.delete_var( "dsh_deadmans.deadmans_table" )
  end
  log2(
    "[%s]: saved: valid = %s, expired = %s",
    script_name(), table.getn( valid ), table.getn( expired )
  )
end


function add_fresh_deadman( victim_id, who_id )
  deadmans_table[ victim_id ] = {
    [ "time"   ] = game.CTime( game.get_game_time() + expire_time ),
    [ "who_id" ] = who_id,
  }
end


function is_fresh_deadman( id )
  local t = deadmans_table[ id ]
  if t then
    if t.time > game.get_game_time() then
      return t.who_id
    else
      deadmans_table[ id ] = nil
    end
  end
end

-- -*- mode: lua; coding: windows-1251-dos -*-

function attach( sm )
  sm:subscribe({ signal = "on_drop_before_all", fun = this.lose_item })
  sm:subscribe({ signal = "on_item_to_ruck",    fun = this.get_item  })
  sm:subscribe({ signal = "on_spawn",           fun = this.on_spawn  })
end


function on_spawn()
  dsh.exec_on_update(
    function()
      local sm = ogse_signals.get_mgr()
      sm:subscribe({ signal = "on_item_to_belt", fun = this.lose_item })
    end
  )
end


local registered = {}

function lose_item( obj )
  local obj_id    = obj:id()
  local obj_sect  = obj:section()
  local obj_clsid = obj:clsid()
  arc.info(
    "Lose item: " .. obj_sect .. "(" .. obj_clsid .. ") id=" .. obj_id, 2
  )
  if                            -- 38
    obj_clsid == clsid.wpn_ammo and obj_sect == "arc_ballast"
  then
    arc_ballast.on_lose_ballast( obj )
  elseif                        -- 39
    obj_clsid == clsid.artefact and dsh.is_artefact( obj_sect )
  then
    if registered[ obj_id ] then
      arc_arts.register_artefact( obj_sect, -1 )
      registered[ obj_id ] = nil
    end
  elseif
    string.find( obj_sect, "arc_art_box_", 1, true )
    and not has_alife_info( "biznes_remove_special_item" )
  then
    if obj_sect == "arc_art_box_basic" then
      arc_containers.on_lose_container( obj_id )
    elseif obj_sect == "arc_art_box_8basic" then
      arc_8containers.on_lose_container( obj_id )
    elseif obj_sect == "arc_art_box_1basic" then
      arc_1containers.on_lose_container( obj_id )
    end
  else
    local radiation_rs = get_float( obj_sect, "radiation_restore_speed", 0 )
    if radiation_rs > 0 then
      arc_radiation.change_inv_arts_radiation( radiation_rs * -1 )
    end
    local psy_rs = get_float( obj_sect, "psy_health_restore_speed", 0 )
    if psy_rs < 0 then
      arc_radiation.change_inv_arts_psy_health( psy_rs * -1 )
    end
  end
end


function get_item( obj )
  local obj_id    = obj:id()
  local obj_sect  = obj:section()
  local obj_clsid = obj:clsid()
  arc.info(
    "Get item: " .. obj_sect .. "(" .. obj_clsid ..") id=" .. obj_id, 2
  )
  if                            -- 38
    obj_clsid == clsid.wpn_ammo and obj_sect == "arc_ballast"
  then
    arc_ballast.on_get_ballast( obj )
  elseif                        -- 39
    obj_clsid == clsid.artefact and dsh.is_artefact( obj_sect )
  then
    if not registered[ obj_id ] then
      arc_arts.register_artefact( obj_sect, 1 )
      registered[ obj_id ] = true
    end
  elseif obj_sect == "arc_art_box_basic" then
    arc_containers.register_container( obj_id, obj_sect )
  elseif obj_sect == "arc_art_box_8basic" then
    arc_8containers.register_container( obj_id, obj_sect )
  elseif obj_sect == "arc_art_box_1basic" then
    arc_1containers.register_container( obj_id, obj_sect )
  elseif                        -- 66
    obj_clsid == clsid.obj_attachable
    and arc.compare_part( obj_sect, "arc_diary" )
  then
    arc_diary.on_get_diary( obj )
  else
    local radiation_rs = get_float( obj_sect, "radiation_restore_speed", 0 )
    if radiation_rs > 0 then
      arc_radiation.change_inv_arts_radiation( radiation_rs )
    end
    local psy_rs = get_float( obj_sect, "psy_health_restore_speed", 0 )
    if psy_rs < 0 then
      arc_radiation.change_inv_arts_psy_health( psy_rs )
    end
  end
end


function on_monster_kill( victim, who )
  arc_diary.monster_killed( victim, who )
end
